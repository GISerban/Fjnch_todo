{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useColorScheme = useColorScheme;\nvar react_native_css_interop_1 = require(\"react-native-css-interop\");\nfunction useColorScheme() {\n  var colorScheme = (0, react_native_css_interop_1.useColorScheme)();\n  return _objectSpread(_objectSpread({}, colorScheme), {}, {\n    setColorScheme: function setColorScheme(scheme) {\n      var _react_native_css_int;\n      var darkMode = (_react_native_css_int = react_native_css_interop_1.StyleSheet.getFlag(\"darkMode\")) != null ? _react_native_css_int : \"media\";\n      if (darkMode === \"media\") {\n        throw new Error(\"Unable to manually set color scheme without using darkMode: class. See: https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually\");\n      }\n      colorScheme == null ? void 0 : colorScheme.setColorScheme(scheme);\n    },\n    toggleColorScheme: function toggleColorScheme() {\n      var _react_native_css_int2;\n      var darkMode = (_react_native_css_int2 = react_native_css_interop_1.StyleSheet.getFlag(\"darkMode\")) != null ? _react_native_css_int2 : \"media\";\n      if (darkMode === \"media\") {\n        throw new Error(\"Unable to manually set color scheme without using darkMode: class. See: https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually\");\n      }\n      colorScheme == null ? void 0 : colorScheme.toggleColorScheme();\n    }\n  });\n}","map":{"version":3,"names":["exports","useColorScheme","react_native_css_interop_1","require","colorScheme","_objectSpread","setColorScheme","scheme","_react_native_css_int","darkMode","StyleSheet","getFlag","Error","toggleColorScheme","_react_native_css_int2"],"sources":["/home/sandocandolari/Projects/Fjnch/node_modules/nativewind/src/stylesheet.ts"],"sourcesContent":["import {\n  StyleSheet,\n  useColorScheme as useCSSColorScheme,\n} from \"react-native-css-interop\";\n\nexport function useColorScheme() {\n  const colorScheme = useCSSColorScheme();\n  return {\n    ...colorScheme,\n    setColorScheme(scheme: Parameters<typeof colorScheme.setColorScheme>[0]) {\n      const darkMode = StyleSheet.getFlag(\"darkMode\") ?? \"media\";\n      if (darkMode === \"media\") {\n        throw new Error(\n          \"Unable to manually set color scheme without using darkMode: class. See: https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually\",\n        );\n      }\n\n      colorScheme?.setColorScheme(scheme);\n    },\n    toggleColorScheme() {\n      const darkMode = StyleSheet.getFlag(\"darkMode\") ?? \"media\";\n      if (darkMode === \"media\") {\n        throw new Error(\n          \"Unable to manually set color scheme without using darkMode: class. See: https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually\",\n        );\n      }\n\n      colorScheme?.toggleColorScheme();\n    },\n  };\n}\n"],"mappings":";;;;;;;;AAKAA,OAAA,CAAAC,cAAA,GAAAA,cAAA;AALA,IAAAC,0BAAA,GAAAC,OAAA;AAKA,SAAgBF,cAAcA,CAAA;EAC5B,IAAMG,WAAW,GAAG,IAAAF,0BAAA,CAAAD,cAAiB,GAAE;EACvC,OAAAI,aAAA,CAAAA,aAAA,KACKD,WAAW;IACdE,cAAc,WAAdA,cAAcA,CAACC,MAAwD;MAAA,IAAAC,qBAAA;MACrE,IAAMC,QAAQ,IAAAD,qBAAA,GAAGN,0BAAA,CAAAQ,UAAU,CAACC,OAAO,CAAC,UAAU,CAAC,YAAAH,qBAAA,GAAI,OAAO;MAC1D,IAAIC,QAAQ,KAAK,OAAO,EAAE;QACxB,MAAM,IAAIG,KAAK,CACb,4IAA4I,CAC7I;MACH;MAEAR,WAAW,oBAAXA,WAAW,CAAEE,cAAc,CAACC,MAAM,CAAC;IACrC,CAAC;IACDM,iBAAiB,WAAjBA,iBAAiBA,CAAA;MAAA,IAAAC,sBAAA;MACf,IAAML,QAAQ,IAAAK,sBAAA,GAAGZ,0BAAA,CAAAQ,UAAU,CAACC,OAAO,CAAC,UAAU,CAAC,YAAAG,sBAAA,GAAI,OAAO;MAC1D,IAAIL,QAAQ,KAAK,OAAO,EAAE;QACxB,MAAM,IAAIG,KAAK,CACb,4IAA4I,CAC7I;MACH;MAEAR,WAAW,oBAAXA,WAAW,CAAES,iBAAiB,EAAE;IAClC;EAAC;AAEL","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}